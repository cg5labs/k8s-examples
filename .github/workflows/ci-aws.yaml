# This is a basic workflow to help you get started with Actions

name: CI-AWS

on:
  # Triggers the workflow on push or pull request events but only for the master branch

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  docker_img: "aws-ci"
  docker_tag: "latest"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v3

      - name: Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}    
    
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2.5.0

      - name: Build for testing
        id: docker_test
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./
          file: ./build/aws-ci/Dockerfile
          load: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ docker_img }}:${{ docker_tag }}

      - name: Run Snyk to check Docker images for CVE
        uses: snyk/actions/docker@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ docker_img }}:${{ docker_tag }}
          args: 
            --file=./build/aws-ci/Dockerfile
            --severity-threshold=medium
            --exclude-app-vulns=/usr/bin/terraform

      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "snyk.sarif"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4.0.0
        with:
          context: ./
          file: ./build/aws-ci/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ docker_img }}:${{ docker_tag }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
